[{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://kennethataylor.github.io/mmequiv/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to mmequiv","text":"mmequiv provides tools calculating standardized Morphine Milligram Equivalent (MME) doses opioid medications research settings. vignette help understand key functions implement research workflow.","code":"library(mmequiv)"},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"understanding-mme-calculations","dir":"Articles","previous_headings":"","what":"Understanding MME Calculations","title":"Introduction to mmequiv","text":"Calculating MME way compare prescription opioid medication doses converting different opioid medications equivalent morphine dose. standardization essential researchers working prescription opioid data, particularly : Population-level medication utilization studies Pharmacoepidemiologic research Claims-based analyses mmequiv implements calculations used NIH HEAL MME Online Calculator, providing researchers : API access official calculator Local calculation capabilities large datasets Several standardized definitions daily MME","code":""},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"finding-available-medications","dir":"Articles","previous_headings":"","what":"Finding Available Medications","title":"Introduction to mmequiv","text":"see opioid medications can used mmequiv MME calculation, use get_med_list(): ’re looking specific medication, can search using partial name:","code":"# Get the full list of supported medications and their conversion factors meds <- get_med_list()  # View first few rows head(meds) # Search for medications containing \"oxy\" in the name search_meds(\"oxy\")"},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"basic-mme-calculation-using-the-nih-heal-mme-online-calculator-api","dir":"Articles","previous_headings":"","what":"Basic MME Calculation Using the NIH HEAL MME Online Calculator API","title":"Introduction to mmequiv","text":"core function package calculate_mme(), calculates MME one opioid medications single patient using NIH HEAL MME Online Calculator API. use , ’ll need provide: Total therapy days (calendar day counted ) observation window days list medications dosage information ’s simple example:","code":"# Create a medications list with two medications meds_list <- list(   list(     medication_name = \"Hydrocodone (mg)\",     dose = 10,     doses_per_24_hours = 4,     days_of_medication = 7   ),   list(     medication_name = \"Oxycodone (mg)\",     dose = 5,     doses_per_24_hours = 2,     days_of_medication = 5   ) )  # Calculate MME with 7 therapy days and 14-day observation window result <- calculate_mme(therapy_days = 7,                         observation_window_days = 14,                          medications = meds_list)"},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"understanding-the-results","dir":"Articles","previous_headings":"","what":"Understanding the Results","title":"Introduction to mmequiv","text":"Let’s examine results calculation: results include: Patient Medication-level calculations: medication’s conversion factor, MME (total), single-day MME. Patient-level summary calculations: total_mme: Sum MME across patient’s prescriptions total_days: Sum days across patient’s prescriptions mme1: Total MME / Total Days Supply mme2: Total MME / -therapy Days mme3: Total MME / Observation Window Days mme4: Maximum Daily Dose (sum single-day MME patient’s prescriptions)","code":"# Extract medication-level results medication_results <- result$medications print(medication_results)  # Extract MME definitions with buprenorphine mme_with_bupr <- result$mme_definitions$with_buprenorphine print(mme_with_bupr)  # Extract MME definitions without buprenorphine mme_without_bupr <- result$mme_definitions$without_buprenorphine print(mme_without_bupr)"},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"when-to-use-local-calculations","dir":"Articles","previous_headings":"","what":"When to Use Local Calculations","title":"Introduction to mmequiv","text":"NIH HEAL MME Online Calculator currently rate limit 50 requests per 15 minutes, calculation request unique patient. datasets substantially 50 patients, can use calculate_mme_local() performs exact calculations locally: inputs outputs identical calculate_mme(), external API calls made.","code":"# Use local calculation (no API call) local_result <- calculate_mme_local(therapy_days = 7,                                      observation_window_days = 14,                                      medications = meds_list)"},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"working-with-data-frames","dir":"Articles","previous_headings":"","what":"Working with Data Frames","title":"Introduction to mmequiv","text":"real-world data analysis, ’ll often medication data data frame rather list. example, mmequiv contains synthetic dataset called opioid_trial contains one row per opioid prescription 1000 fake patients (long format) row containing components required MME calculation. large datasets take annoyingly long time calculate using API (recall API rate limit 50 patients per 15 minutes), can use calculate_mme_df(): results include:","code":"# View the example dataset structure head(opioid_trial)  # Calculate MME from a data frame mme_df_result <- calculate_mme_df(   data = opioid_trial,   id_col = \"patient_id\",   medication_col = \"medication_name\",    dose_col = \"dose\",   doses_per_day_col = \"doses_per_24_hours\",   days_col = \"days_of_medication\",   therapy_days_col = \"therapy_days\",   observation_days_col = \"observation_window_days\",   therapy_days_without_col = \"therapy_days_without\",   observation_days_without_col = \"observation_window_days_without\" ) # Original data with MME calculations added head(mme_df_result$medications)  # Patient-level summaries with buprenorphine head(mme_df_result$patient_summary_with_buprenorphine)  # Patient-level summaries without buprenorphine head(mme_df_result$patient_summary_without_buprenorphine)"},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"choosing-the-right-mme-definition","dir":"Articles","previous_headings":"","what":"Choosing the Right MME Definition","title":"Introduction to mmequiv","text":"package calculates four different MME/day definitions, suited different research questions: MME Definition 1 (mme1): Total MME divided Total Days Supply Best suited studies immediate-release opioids prescribed short, discrete periods MME Definition 2 (mme2): Total MME divided -therapy Days Ideal studies dose-dependent adverse effects (e.g., opioid-induced constipation) Useful patients opioid tolerance stable opioids MME Definition 3 (mme3): Total MME divided Fixed Observation Window Recommended Department Health Human Services Office Inspector General Suitable studies known duration risk (e.g., opioid use disorder incidence) Useful prescriptions filled irregular intervals (PRN basis) MME Definition 4 (mme4): Maximum Daily Dose Appropriate patients opioid tolerance comorbidities respiratory depression Used CDC Opioid Guideline mobile app Best immediate dose-dependent toxic effects (e.g., respiratory depression) Choose definition best aligns research question population.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"important-caveats","dir":"Articles","previous_headings":"","what":"Important Caveats","title":"Introduction to mmequiv","text":"Remember mmequiv, like NIH HEAL MME Online Calculator, intended : Research Analytical purposes using claims dispensing data Surveillance population-level medication utilization calculations intended : Clinical decision-making prescribing opioids Clinical guidance prescribing Recommendations converting patients one opioid analgesic another","code":""},{"path":"https://kennethataylor.github.io/mmequiv/articles/mmequiv.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Introduction to mmequiv","text":"mmequiv provides comprehensive set tools calculating standardized MME research settings. Whether ’re working small samples calling NIH HEAL MME Online Calculator API large datasets local calculations, package offers consistent, validated methods support research. information methodology behind calculations, refer Adams, et al. (2025).","code":""},{"path":"https://kennethataylor.github.io/mmequiv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kenneth . Taylor. Author, maintainer, copyright holder.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylor K (2025). mmequiv: Calculate Standardized Morphine Milligram Equivalent Doses. R package version 0.0.0.9000, https://kennethataylor.github.io/mmequiv/.","code":"@Manual{,   title = {mmequiv: Calculate Standardized Morphine Milligram Equivalent Doses},   author = {Kenneth A. Taylor},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://kennethataylor.github.io/mmequiv/}, }"},{"path":"https://kennethataylor.github.io/mmequiv/index.html","id":"mmequiv-","dir":"","previous_headings":"","what":"R Interface to the NIH HEAL Morphine Milligram Equivalent API","title":"R Interface to the NIH HEAL Morphine Milligram Equivalent API","text":"goal mmequiv provide users ability calculate standardized Morphine Milligram Equivalent (MME) doses prescription opioid medications research purposes. mmequiv’s API wrapper functions takes information prescription opioids used study participants directly interfaces NIH HEAL MME Online Calculator API R calculate MME daily MME based several standardized definitions. NIH HEAL MME Online Calculator API rate limit 50 requests per 15 minutes, mmequiv also provides functions perform calculations locally without needing call API user large data sets (user may access internet). mmequiv intended purposes NIH HEAL MME Online Calculator - data resource : research, analytical purposes using claims dispensing data, surveillance population-level medication utilization. Important: Users aware caveats limitations NIH HEAL MME Online Calculator - also apply mmequiv: data collection tool intended clinical decision-making clinicians prescribing opioids. MME conversion factors survey constitute clinical guidance prescribing recommendations converting patients one form opioid analgesic another. read NIH HEAL MME Online Calculator, see Adams, et al. (2025).","code":""},{"path":"https://kennethataylor.github.io/mmequiv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Interface to the NIH HEAL Morphine Milligram Equivalent API","text":"can install mmequiv CRAN using following code: can install development version mmequiv like :","code":"install.packages(\"mmequiv\") # install.packages(\"remotes\") remotes::install_github('KennethATaylor/mmequiv')"},{"path":"https://kennethataylor.github.io/mmequiv/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"R Interface to the NIH HEAL Morphine Milligram Equivalent API","text":"addition citing original paper Adams, et al. (2025), consider citing package. can obtain information needed cite package running:","code":"citation(\"mmequiv\")"},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate morphine milligram equivalents (MME) — calculate_mme","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"Calculates single-day MME total MME individual prescription opioid medication submitted calculation. Also calculates total MME, total days supply, four distinct Total MME/Day calculations NIH HEAL Online MME Calculator across prescription medications two different medication groupings: 1) opioids without buprenorphine 2) opioids buprenorphine.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"","code":"calculate_mme(therapy_days, observation_window_days, medications)  calculate_mme_local(therapy_days, observation_window_days, medications)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"therapy_days Either single positive number vector two positive numbers indicating sum prescription duration (days) medication, calendar day counted . single number provided, used \"buprenorphine\" \"without buprenorphine\" MME calculations; vector 2 numbers provided (e.g., c(10, 18)) first second numbers vector used \"buprenorphine\" \"without buprenorphine\" MME calculations, respectively. denominator MME/Day definition 2. one prescription calendar overlap (.e., days one prescription active) total days supply returned calculator API (total_days). overlapping prescriptions, number unique calendar days. observation_window_days Either single positive number vector two positive numbers indicating study-defined fixed observation window time. Typical choices 7 day, 14 day, 30 day, 90 day. single number provided, used \"buprenorphine\" \"without buprenorphine\" MME calculations; vector 2 numbers provided (e.g., c(7, 30)) first second numbers vector used \"buprenorphine\" \"without buprenorphine\" MME calculations, respectively. denominator MME/Day definition 3. medications list medication definitions. element must list containing following fields: medication_name: string matching API-accepted medication name dosage units. see full list API-accepted values, run get_med_list(). dose: positive number indicating dose associated opioid medication listed medication_name field. Units dose match units listed medication_name. doses_per_24_hours: positive number indicating number doses 24 hours. days_of_medication: positive number indicating duration opioid medication prescription listed associated medication_name days.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"list MME calculations API. error medications invalid numeric parameters positive numbers.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"calculate_mme() calculate_mme_local() produce calculation results without using API, respectively. helps overcome online calculator API rate limit 50 (patient-level) requests per 15 minutes. addition returning user-specified arguments, calculate_mme() also returns several  variables mentioned Description section, described detail . Output variable description details ; see Adams, et al. (2025) comprehensive overview.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"prescription-level","dir":"Reference","previous_headings":"","what":"Prescription-Level","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"Conversion Factor <medication_name> (factor): conversion factor used calculating total MME/day. MME <medication_name> (mme): Morphine milligram equivalent whole prescription specified medication_name, calculated (dose) * (doses_per_24_hours) * (factor) * (days_of_medication). 24h MME <medication_name> (single_day_mme): Morphine milligram equivalent prescription specified medication_name single day, calculated (dose) * (doses_per_24_hours) * (factor). One day: Typically, day highest opioid exposure entered, sum 24-hour MME across drugs apply day calculated. Highest MME one day definition 4.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"summary-level-","dir":"Reference","previous_headings":"","what":"Summary-Level:","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"-therapy Days (therapy_days): sum prescription duration (days_of_medication) medication, calendar day counted . User-supplied; denominator MME/Day definition 2. one prescription, calendar overlap (days one prescription active), total days supply. overlapping prescriptions, number unique calendar days. Total MME (total_mme): MME medication, summed across prescriptions. numerator MME/Day definitions 1, 2, 3. Total Days Supply (total_days): sum entered prescription duration (days_of_medication) medications (Med 1 duration + med 2 duration...). Automatically calculated. denominator MME/Day definition 1.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"mme-day","dir":"Reference","previous_headings":"","what":"MME/Day","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"MME/Day aggregate measure, calculating total MME divided specified time window (number days). MME/Day definitions specify number days: MME/Day Definition 1 (mme1): Total Days Supply MME Definition 1 = Total MME / Total Days Supply time window (sum entered prescription durations).   Note calendar day may contribute multiple times, overlapping prescriptions. Reason select definition: least complicated calculation; appears best suited immediate-release opioids prescribed short discrete times. Identified challenge definition: consistently underestimated MME per day overlapping prescriptions present immediate-release extended release opioids prescribed concurrently. MME/Day Definition 2 (mme2): -therapy Days MME Definition 2 = Total MME / -therapy Days time window (sum entered prescription durations except calendar day counted ).   Note - -therapy Days unique calendar days. Reason select definition: Provides smoothed measure useful studies dose-dependent adverse effects, including opioid-induced constipation overdose patients opioid tolerance stable opioids. Identified challenge definition: metric time-varying affords greatest flexibility define medication gap periods leftover/unused medications improve pharmacoepidemiologic studies. MME/Day Definition 3 (mme3): Fixed Observation Window Uses Total MME study-specified fixed observation window. MME Definition 3 = Total MME / Number days observation window:   definition selected, important report duration fixed window. Reason select definition: suitable studies known suspected duration risk adverse events expected occur, incidence opioid use disorder. definition may useful prescriptions filled irregular time intervals needed basis (pro re nata, PRN). Identified challenge definition: definition consistently lowest milligrams per day immediate-release opioids. robust misspecification, amenable transformations, least noise constructing continuous functions. However, since assumes uniform exposure/risk within window, less scope time-varying adjustment. definition recommended Department Health Human Services Office Inspector General. MME/Day Definition 4 (mme4): Maximum Daily Dose Uses sum 24-hour MME day highest opioid exposure. MME Definition 4 = Drug 1 (dose (mg) x # doses per day) x conversion factor + Drug 2 (dose (mg) x # doses per day) x conversion factor + ...   Report highest single-day exposure. Reason select definition: toxicological perspective may appropriate patients opioid tolerance presence comorbidities respiratory depression. appears best suited immediate dose-dependent toxic effects, respiratory depression. Identified challenged definition: definition may limited use includes opioids fatal toxicity involve respiratory depression (e.g., tramadol) atypical mu-opioid receptor agonism (e.g., tapentadol, buprenorphine). definition assumes uniform risk adverse outcomes regardless time -therapy. others, definition prone influence early refills, unused medication, 90 MME threshold operationalized. definition underlies algorithm embedded CDC Opioid Guideline mobile app. may difficulty reconciling findings studies using definitions returns MME per day significantly higher. calculator sums 24-hour MME every prescription, without considering calendar dates.","code":"mme1 = total_mme / total_days mme2 = total_mme / therapy_days mme3 = total_mme / observation_window_days mme4 = sum(dose * doses_per_24_hours * factor)"},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate morphine milligram equivalents (MME) — calculate_mme","text":"","code":"meds_list <- list(   list(     medication_name = \"Buprenorphine buccal film (mcg) buccal\",     dose = 50,     doses_per_24_hours = 2,     days_of_medication = 5     ),   list(     medication_name = \"Hydrocodone (mg)\",     dose = 75,     doses_per_24_hours = 3,     days_of_medication = 10     ) )  calculate_mme(10, 5, meds_list) #> $message #> [1] \"Processed medications\" #>  #> $therapy_obs_window_with #> $therapy_obs_window_with$therapy_days #> [1] 10 #>  #> $therapy_obs_window_with$observation_window_days #> [1] 5 #>  #>  #> $therapy_obs_window_without #> $therapy_obs_window_without$therapy_days #> [1] 10 #>  #> $therapy_obs_window_without$observation_window_days #> [1] 5 #>  #>  #> $medications #>                          medication_name dose doses_per_24_hours #> 1 Buprenorphine buccal film (mcg) buccal   50                  2 #> 2                       Hydrocodone (mg)   75                  3 #>   days_of_medication factor    mme single_day_mme #> 1                  5  0.039   19.5            3.9 #> 2                 10  1.000 2250.0          225.0 #>  #> $mme_definitions #> $mme_definitions$with_buprenorphine #>   total_mme total_days  mme1   mme2  mme3  mme4 #> 1    2269.5         15 151.3 226.95 453.9 228.9 #>  #> $mme_definitions$without_buprenorphine #>   total_mme total_days mme1 mme2 mme3 mme4 #> 1      2250         10  225  225  450  225 #>  #>   # Clean up meds_list rm(meds_list)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate MME for medication data in long format — calculate_mme_df","title":"Calculate MME for medication data in long format — calculate_mme_df","text":"function takes medication data long format (multiple rows per patient ID), calculates MME using local calculation method (calculate_mme_local()), adds prescription-level values new columns. also returns two additional data frames patient-level MME summaries (one buprenorphine included one without).","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate MME for medication data in long format — calculate_mme_df","text":"","code":"calculate_mme_df(   data,   id_col = \"patient_id\",   medication_col = \"medication_name\",   dose_col = \"dose\",   doses_per_day_col = \"doses_per_24_hours\",   days_col = \"days_of_medication\",   therapy_days_col = \"therapy_days\",   observation_days_col = \"observation_window_days\",   therapy_days_without_col = NULL,   observation_days_without_col = NULL )"},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate MME for medication data in long format — calculate_mme_df","text":"data data.frame tibble long format one row per medication per patient participant (id_col) id_col Name column containing patient identifier; default \"patient_id\" medication_col Name column containing medication names; default \"medication_name\" dose_col Name column containing dose values; default \"dose\" doses_per_day_col Name column containing doses per 24 hours; \"doses_per_24_hours\" days_col Name column containing days medication; default \"days_of_medication\" therapy_days_col Name column containing therapy days buprenorphine (one unique value per patient); default \"therapy_days\" observation_days_col Name column containing observation window days buprenorphine (one unique value per patient); default \"observation_window_days\" therapy_days_without_col Name column containing therapy days without buprenorphine (one unique value per patient). NULL (default), uses value therapy_days_col. observation_days_without_col Name column containing observation window days without buprenorphine (one unique value per patient). NULL (default), uses value observation_days_col.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate MME for medication data in long format — calculate_mme_df","text":"list containing three elements: medications: original data.frame added prescription-level MME columns patient_summary_with_buprenorphine: Patient-level MME summary including buprenorphine patient_summary_without_buprenorphine: Patient-level MME summary excluding buprenorphine","code":""},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/reference/calculate_mme_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate MME for medication data in long format — calculate_mme_df","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union # Calculate MME using long-format data # Subset of opioid_trial data used for speedier example mme <- calculate_mme_df(   data = opioid_trial |> dplyr::filter(patient_id %in% sprintf(\"P%03d\", 1:100)),   therapy_days_without_col = \"therapy_days_without\",   observation_days_without_col = \"observation_window_days_without\"   )    head(mme$medications) #> # A tibble: 6 × 12 #>   patient_id medication_name          dose doses_per_24_hours days_of_medication #>   <chr>      <chr>                   <dbl>              <dbl>              <dbl> #> 1 P001       Fentanyl patch (mcg/hr)  12.5                  1                  7 #> 2 P001       tramadol (mg) LA        125                    1                 30 #> 3 P002       Hydrocodone (mg)         10                    3                 14 #> 4 P002       tramadol (mg)            60                    3                 14 #> 5 P003       Meperidine HCL (mg)      50                    4                  7 #> 6 P003       tramadol (mg)            90                    3                  7 #> # ℹ 7 more variables: therapy_days <dbl>, observation_window_days <dbl>, #> #   therapy_days_without <dbl>, observation_window_days_without <dbl>, #> #   factor <dbl>, mme <dbl>, single_day_mme <dbl>  head(mme$patient_summary_with_buprenorphine) #>   patient_id therapy_days observation_window_days total_mme total_days #> 1       P001            7                      30    960.00         37 #> 2       P002           14                      30    924.00         28 #> 3       P003            7                      30   2228.00         31 #> 4       P004            7                      30    210.00          7 #> 5       P005            7                      30     47.25          7 #> 6       P006            7                      30   3395.25         31 #>        mme1     mme2      mme3   mme4 #> 1  25.94595 137.1429  32.00000  55.00 #> 2  33.00000  66.0000  30.80000  66.00 #> 3  71.87097 318.2857  74.26667 204.00 #> 4  30.00000  30.0000   7.00000  30.00 #> 5   6.75000   6.7500   1.57500   6.75 #> 6 109.52419 485.0357 113.17500 393.75  head(mme$patient_summary_without_buprenorphine) #>   patient_id therapy_days observation_window_days total_mme total_days #> 1       P001            7                      30    960.00         37 #> 2       P002           14                      30    924.00         28 #> 3       P003            7                      30   2228.00         31 #> 4       P004            7                      30    210.00          7 #> 5       P005            7                      30     47.25          7 #> 6       P006            7                      30   3395.25         31 #>        mme1     mme2      mme3   mme4 #> 1  25.94595 137.1429  32.00000  55.00 #> 2  33.00000  66.0000  30.80000  66.00 #> 3  71.87097 318.2857  74.26667 204.00 #> 4  30.00000  30.0000   7.00000  30.00 #> 5   6.75000   6.7500   1.57500   6.75 #> 6 109.52419 485.0357 113.17500 393.75  # Cleanup rm(mme)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/get_med_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve full opioid medication list — get_med_list","title":"Retrieve full opioid medication list — get_med_list","text":"Retrieve full opioid medication list","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/get_med_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve full opioid medication list — get_med_list","text":"","code":"get_med_list()"},{"path":"https://kennethataylor.github.io/mmequiv/reference/get_med_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve full opioid medication list — get_med_list","text":"data.frame full list opioid medication names (med_name) compatible MME calculator along conversion factors (cf).","code":""},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/reference/get_med_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve full opioid medication list — get_med_list","text":"","code":"get_med_list() #>                                     med_name     cf #> 1     Buprenorphine buccal film (mcg) buccal  0.039 #> 2   Buprenorphine patch (mcg/hr) transdermal  2.200 #> 3  Buprenorphine tablet/film (mg) sublingual 38.800 #> 4                           butorphanol (mg)  7.000 #> 5                               Codeine (mg)  0.150 #> 6                        Dihydrocodeine (mg)  0.250 #> 7                      Fentanyl buccal (mcg)  0.130 #> 8                       Fentanyl nasal (mcg)  0.160 #> 9                        Fentanyl oral (mcg)  0.180 #> 10                   Fentanyl patch (mcg/hr)  2.400 #> 11                          Hydrocodone (mg)  1.000 #> 12                       Hydrocodone LA (mg)  1.000 #> 13                        Hydromorphone (mg)  5.000 #> 14                     Hydromorphone (mg) LA  5.000 #> 15                 Levorphanol tartrate (mg) 11.000 #> 16                       Meperidine HCL (mg)  0.100 #> 17                            Methadone (mg)  4.700 #> 18                             Morphine (mg)  1.000 #> 19                          Morphine (mg) LA  1.000 #> 20                                Opium (mg)  1.000 #> 21                            Oxycodone (mg)  1.500 #> 22                         Oxycodone (mg) LA  1.500 #> 23                          Oxymorphone (mg)  3.000 #> 24                       Oxymorphone (mg) LA  3.000 #> 25                          Pentazocine (mg)  0.370 #> 26                           tapentadol (mg)  0.300 #> 27                        tapentadol (mg) LA  0.300 #> 28                             tramadol (mg)  0.200 #> 29                          tramadol (mg) LA  0.200"},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mmequiv: Calculate Standardized Morphine Milligram Equivalent Doses — mmequiv-package","title":"mmequiv: Calculate Standardized Morphine Milligram Equivalent Doses — mmequiv-package","text":"Calculate morphine milligram equivalents (MME) opioid dose comparison using standardized methods. Includes API wrapper functions call 'NIH HEAL MME Online Calculator' functions replicate API calculations user's local machine comfort 'R'. Creation 'NIH HEAL MME Online Calculator' MME calculations implemented package described Adams MCB, Sward KA, Perkins ML, Hurley RW (2025) doi:10.1097/j.pain.0000000000003529 .","code":""},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mmequiv: Calculate Standardized Morphine Milligram Equivalent Doses — mmequiv-package","text":"Maintainer: Kenneth . Taylor kenneth.taylor.dpt@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_after.html","id":null,"dir":"Reference","previous_headings":"","what":"Get time remaining from Retry-After header — mmequiv_after","title":"Get time remaining from Retry-After header — mmequiv_after","text":"Get time remaining Retry-header","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_after.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get time remaining from Retry-After header — mmequiv_after","text":"","code":"mmequiv_after(resp)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_after.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get time remaining from Retry-After header — mmequiv_after","text":"resp httr2 response object.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_after.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get time remaining from Retry-After header — mmequiv_after","text":"numeric value indicating number seconds remaining. May error response contain valid Retry-header.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_is_transient.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if MME Calculator API response indicates transient error — mmequiv_is_transient","title":"Check if MME Calculator API response indicates transient error — mmequiv_is_transient","text":"Check MME Calculator API response indicates transient error","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_is_transient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if MME Calculator API response indicates transient error — mmequiv_is_transient","text":"","code":"mmequiv_is_transient(resp)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_is_transient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if MME Calculator API response indicates transient error — mmequiv_is_transient","text":"resp httr2 response object.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_is_transient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if MME Calculator API response indicates transient error — mmequiv_is_transient","text":"logical value indicating whether rate limit error (429) API calls remaining.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_req_retry.html","id":null,"dir":"Reference","previous_headings":"","what":"Automatically retry a request on failure with mmequiv package details — mmequiv_req_retry","title":"Automatically retry a request on failure with mmequiv package details — mmequiv_req_retry","text":"Automatically retry request failure mmequiv package details","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_req_retry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automatically retry a request on failure with mmequiv package details — mmequiv_req_retry","text":"","code":"mmequiv_req_retry(req, ...)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_req_retry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automatically retry a request on failure with mmequiv package details — mmequiv_req_retry","text":"req httr2 request object.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/mmequiv_req_retry.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automatically retry a request on failure with mmequiv package details — mmequiv_req_retry","text":"modified HTTP (httr2) request.","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/opioid_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"Opioid Trial Data — opioid_trial","title":"Opioid Trial Data — opioid_trial","text":"Example (synthetic) data provided example long format data use calculate_mme_df().","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/opioid_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Opioid Trial Data — opioid_trial","text":"","code":"opioid_trial"},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/reference/opioid_trial.html","id":"opioid-trial","dir":"Reference","previous_headings":"","what":"opioid_trial","title":"Opioid Trial Data — opioid_trial","text":"data frame 2,371 rows 9 columns: patient_id Patient identifier; includes 1000 separate patients medication_name Medication names prescription opioids used patient dose Dosage medication doses_per_24_hours Number daily doses medication days_of_medication Duration medication days therapy_days Sum prescription duration (days) across patient's medications, calendar day counted observation_window_days study-defined fixed observation window time, applied patient's medications therapy_days_without Sum prescription duration (days) across patient's medications (excluding buprenorphine), calendar day counted observation_window_days_without study-defined fixed observation window time, applied patient's medications (excluding buprenorphine)","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/search_meds.html","id":null,"dir":"Reference","previous_headings":"","what":"Search opioid medication list — search_meds","title":"Search opioid medication list — search_meds","text":"Search opioid medication list","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/search_meds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search opioid medication list — search_meds","text":"","code":"search_meds(med_name = NULL)"},{"path":"https://kennethataylor.github.io/mmequiv/reference/search_meds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search opioid medication list — search_meds","text":"med_name single string specifying medication name search .","code":""},{"path":"https://kennethataylor.github.io/mmequiv/reference/search_meds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search opioid medication list — search_meds","text":"data.frame containing medications matching med_name argument associated conversion factor(s) (cf).","code":""},{"path":[]},{"path":"https://kennethataylor.github.io/mmequiv/reference/search_meds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search opioid medication list — search_meds","text":"","code":"search_meds(\"oxy\") #>              med_name  cf #> 1   Oxycodone (mg) LA 1.5 #> 2 Oxymorphone (mg) LA 3.0 #> 3      Oxycodone (mg) 1.5 #> 4    Oxymorphone (mg) 3.0"},{"path":"https://kennethataylor.github.io/mmequiv/news/index.html","id":"mmequiv-development-version","dir":"Changelog","previous_headings":"","what":"mmequiv (development version)","title":"mmequiv (development version)","text":"Initial CRAN submission.","code":""}]
